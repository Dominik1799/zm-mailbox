version: 2

############################################################################

references:
   default_environment_settings: &default_environment_settings
      docker:
        - image: zimbra/zm-base-os:devcore-ubuntu-16.04
      environment:
        - ANT_OPTS: "-Dzimbra.buildinfo.version=8.9.0"
        - BUILD: "/home/build"
      working_directory: /home/build/zm-mailbox-circleci
   default_attach_workspace: &default_attach_workspace
         attach_workspace:
            at: /home/build/
   load_env: &load_env
       run: echo 'source $PWD/.env' >> $BASH_ENV
   filter_branches: &filter_branches
     filters:
       branches:
         ignore:
           - develop 
   add_ssh_keys: &add_ssh_keys
     add_ssh_keys:
       fingerprints:
         - "c5:cd:65:2e:89:6a:50:c2:4d:ad:21:43:d1:d4:92:87"
############################################################################

jobs:
  checkout_and_verify_params:
    <<: *default_environment_settings
    steps:
      - checkout
      - run:
          name: Verifying configuration parameters
          command: |
            [ ! -z "$DOCKER_USER" ] || exit 1
            [ ! -z "$DOCKER_PASS" ] || exit 1
            [ ! -z "$DOCKER_REPO_NS" ] || exit 1
            export SANITIZED_BRANCH=${CIRCLE_BRANCH/\//_}
            echo "Docker Repo Namespace: $DOCKER_REPO_NS"
            echo "Docker User: $DOCKER_USER"
            echo "Sanitized branch name: $SANITIZED_BRANCH"
            echo "SANITIZED_BRANCH=$SANITIZED_BRANCH" | tee -a .env;
      - run:
          name: Cloning zm-mailbox...
          command: |
            cd "$BUILD"
            [ ! -z "$DOCKER_USER" ] && git clone --depth=1 --branch develop git@github.com:ZimbraOS/zm-mailbox.git zm-mailbox || exit 1
      - persist_to_workspace:
          root: /home/build/
          paths:
            - zm-mailbox-circleci
            - zm-mailbox  
            - .ssh
  build_native_submodule:
    <<: *default_environment_settings
    steps: 
      - *default_attach_workspace
      - run:
          name: Building 'zm-mailbox/native'
          command: |
            cd "$BUILD/zm-mailbox"
            ant -f native/build.xml compile publish-local
      - persist_to_workspace:
          root: /home/build/
          paths:
            - zm-mailbox/native
            - .zcs-deps/zimbra/zm-native
  build_common_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Building 'zm-mailbox/common'
          command: | 
            cd "$BUILD/zm-mailbox"
            ant -f common/build.xml compile publish-local
      - persist_to_workspace:
          root: /home/build/
          paths:
            - zm-mailbox/common
            - .zcs-deps/zimbra/zm-common
  build_soap_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Building 'zm-mailbox/soap'
          command: |
            cd "$BUILD/zm-mailbox" 
            ant -f soap/build.xml compile publish-local
      - persist_to_workspace:
          root: /home/build/
          paths:
            - zm-mailbox/soap
            - .zcs-deps/zimbra/zm-soap
  build_client_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Building 'zm-mailbox/client'
          command: |
            cd "$BUILD/zm-mailbox"
            ant -f client/build.xml compile publish-local
      - persist_to_workspace:
          root: /home/build/
          paths:
            - zm-mailbox/client
            - .zcs-deps/zimbra/zm-client
  build_store_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Building 'zm-mailbox/store'
          command: |
            cd "$BUILD/zm-mailbox"
            ant -f store/build.xml compile publish-local
      - persist_to_workspace:
          root: /home/build/
          paths:
            - zm-mailbox/store
            - .zcs-deps/zimbra/zm-store
  test_native_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Running unit tests for 'zm-mailbox/native'
          command: |
            cd "$BUILD/zm-mailbox"
            set -e
            ant -Dhalt-on-failure=true -f native/build.xml test
      - store_test_results:
          path: "$BUILD/zm-mailbox/native/build/test/report"
      - store_artifacts:
          path: "$BUILD/zm-mailbox/native/build/test/report"
  test_common_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Running unit tests for 'zm-mailbox/common'
          command: |
            cd "$BUILD/zm-mailbox"
            set -e
            ant -Dhalt-on-failure=true -f common/build.xml test
      - store_test_results:
          path: "$BUILD/zm-mailbox/common/build/test/report"
      - store_artifacts:
          path: "$BUILD/zm-mailbox/common/build/test/report"
  test_soap_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Running unit tests for 'zm-mailbox/soap'
          command: |
            cd "$BUILD/zm-mailbox"
            set -e
            ant -Dhalt-on-failure=true -f soap/build.xml test
      - store_test_results:
          path: "$BUILD/zm-mailbox/soap/build/test/report"
      - store_artifacts:
          path: "$BUILD/zm-mailbox/soap/build/test/report"
  test_client_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Running unit tests for 'zm-mailbox/client'
          command: |
            cd "$BUILD/zm-mailbox"
            set -e
            ant -Dhalt-on-failure=true -f client/build.xml test
      - store_test_results:
          path: "$BUILD/zm-mailbox/client/build/test/report"
      - store_artifacts:
          path: "$BUILD/zm-mailbox/client/build/test/report"
  test_store_submodule:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - run:
          name: Running unit tests for 'zm-mailbox/store'
          command: |
            cd "$BUILD/zm-mailbox"
            set -e 
            ant -Dhalt-on-failure=true -f store/build.xml test
      - store_test_results:
          path: "$BUILD/zm-mailbox/store/build/test/report"
      - store_artifacts:
          path: "$BUILD/zm-mailbox/store/build/test/report"
  deploy_to_swarm:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - *add_ssh_keys
      - *load_env
      - run:
          name: export SANITIZED_BRANCH variable
          command: export SANITIZED_BRANCH=${CIRCLE_BRANCH/\//_}
      - run:
          name: setup known_hosts file for infrastructure-dev-deployment1
          command: echo '|1|NejILQJJKhGOrm0/6LH096Db4pA=|7zUWnDat1buNmT7qKwFJAg2agK4= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGVFXloxZyPPemHZ0yC014WrFWgtVyoz/jKGS75Ud+A35GkmNMMJa2eW83RZRe1r1Z8BNQvMBIG/UC491ZXe0WI=' > ~/.ssh/known_hosts
      - run:
          name: Running zm-docker make compile
          command: ssh -t ubuntu@ec2-34-226-65-84.compute-1.amazonaws.com "repos/zm-continuous-integration/build_and_deploy_images latest-${SANITIZED_BRANCH} compile"
      - run:
          name: Running zm-docker make build-all
          command: ssh -t ubuntu@ec2-34-226-65-84.compute-1.amazonaws.com "repos/zm-continuous-integration/build_and_deploy_images latest-${SANITIZED_BRANCH} build ec2-3-81-175-193.compute-1.amazonaws.com" 
      - run:
          name: Running zm-docker make up
          command: ssh -t ubuntu@ec2-34-226-65-84.compute-1.amazonaws.com "repos/zm-continuous-integration/build_and_deploy_images latest-${SANITIZED_BRANCH} up"
  run_sanity_tests:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - *add_ssh_keys
      - *load_env
      - run:
          name: setup known_hosts file for infrastructure-dev-deployment1
          command: echo '|1|NejILQJJKhGOrm0/6LH096Db4pA=|7zUWnDat1buNmT7qKwFJAg2agK4= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGVFXloxZyPPemHZ0yC014WrFWgtVyoz/jKGS75Ud+A35GkmNMMJa2eW83RZRe1r1Z8BNQvMBIG/UC491ZXe0WI=' > ~/.ssh/known_hosts
      - run:
          name: Running sanity tests 
          command: ssh ubuntu@ec2-34-226-65-84.compute-1.amazonaws.com "repos/zm-continuous-integration/run_soap_sanity_tests"
          no_output_timeout: 30m
  push_latest:
    <<: *default_environment_settings
    steps:
      - *default_attach_workspace
      - *add_ssh_keys
      - *load_env
      - run:
          name: export SANITIZED_BRANCH variable
          command: export SANITIZED_BRANCH=${CIRCLE_BRANCH/\//_}
      - run:
          name: setup known_hosts file for infrastructure-dev-deployment1
          command: echo '|1|NejILQJJKhGOrm0/6LH096Db4pA=|7zUWnDat1buNmT7qKwFJAg2agK4= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGVFXloxZyPPemHZ0yC014WrFWgtVyoz/jKGS75Ud+A35GkmNMMJa2eW83RZRe1r1Z8BNQvMBIG/UC491ZXe0WI=' > ~/.ssh/known_hosts
      - run: 
          name: Running make push-all to push latest images
          command: ssh ubuntu@ec2-34-226-65-84.compute-1.amazonaws.com "repos/zm-continuous-integration/build_and_deploy_images latest-${SANITIZED_BRANCH} push ec2-3-81-175-193.compute-1.amazonaws.com $PRIVATE_DOCKER_USER $PRIVATE_DOCKER_PASS"
############################################################################

workflows:
  version: 2
  build_deploy:
    jobs:
      - checkout_and_verify_params:
          <<: *filter_branches
      - build_native_submodule:
          requires:
            - checkout_and_verify_params
          <<: *filter_branches
      - build_common_submodule:
          requires:
            - build_native_submodule
          <<: *filter_branches
      - build_soap_submodule:
          requires:
            - build_common_submodule
          <<: *filter_branches
      - build_client_submodule:
          requires:
            - build_soap_submodule
          <<: *filter_branches
      - build_store_submodule:
          requires:
            - build_client_submodule
          <<: *filter_branches
      - test_native_submodule:
          requires:
            - build_native_submodule
          <<: *filter_branches
      - test_common_submodule:
          requires:
            - build_common_submodule
          <<: *filter_branches
      - test_soap_submodule:
          requires:
            - build_soap_submodule
          <<: *filter_branches
      - test_client_submodule:
          requires:
            - build_client_submodule
          <<: *filter_branches
      - test_store_submodule:
          requires:
            - build_store_submodule
          <<: *filter_branches
      - deploy_to_swarm:
          requires:
            - test_native_submodule
            - test_common_submodule
            - test_soap_submodule
            - test_client_submodule
            - test_store_submodule
          <<: *filter_branches
      - run_sanity_tests:
          requires:
            - deploy_to_swarm
          <<: *filter_branches
      - push_latest:
          requires:
            - run_sanity_tests
          <<: *filter_branches
############################################################################
notify:
  webhooks:
    - url: http://ec2-54-157-18-126.compute-1.amazonaws.com:5000/post-status
